create or replace PROCEDURE "AD_STP_CALC_PMPF" (P_CODUSU NUMBER, -- Código do usuário logado
 P_IDSESSAO VARCHAR2, -- Identificador da execução. Serve para buscar informações dos parâmetros/campos da execução.
 P_QTDLINHAS NUMBER, -- Informa a quantidade de registros selecionados no momento da execução.
 P_MENSAGEM OUT VARCHAR2 -- Caso seja passada uma mensagem aqui, ela será exibida como uma informação ao usuário.
 ) AS FIELD_NUMAPU NUMBER;

V_CODEMPRESA INT;

V_DATAFIN DATE;

V_DATAINI DATE;

V_TOTAL NUMBER;

V_VALIDA VARCHAR(4000);

V_VALIDA1 INT;

V_NUFIN INT;

v_dhalter tgftop.dhalter%TYPE;

PARAM_DTVENC DATE;

--CRIADA EM 03/08/22 POR DIEGO.ALVES
--UTILIZADA PARA CALCULO DA ROTINA APURACAO PMPF
 BEGIN
FOR I IN 1..P_QTDLINHAS LOOP FIELD_NUMAPU := ACT_INT_FIELD(P_IDSESSAO, I, 'NUMAPU');

PARAM_DTVENC := ACT_DTA_PARAM(P_IDSESSAO, 'DTVENC');


SELECT CODEMP INTO V_CODEMPRESA
FROM AD_CABECALHOPMPF
WHERE NUMAPU = FIELD_NUMAPU;


SELECT REFERENCIA INTO V_DATAINI
FROM AD_CABECALHOPMPF
WHERE NUMAPU = FIELD_NUMAPU;


SELECT DATAFIN INTO V_DATAFIN
FROM ad_periodos
WHERE dataini =
    (SELECT referencia
     FROM AD_CABECALHOPMPF
     WHERE numapu = FIELD_NUMAPU);


SELECT CASE
           WHEN count(ITE.CODPROD) >=1 THEN 'Produtos com valor de ST e sem PAUTA na Referência: ' || listagg (' ' || ITE.CODPROD ||',') within GROUP(
                                                                                                                                                      ORDER BY ITE.CODPROD)
           ELSE 'Não existem pendências'
       END AS ID,
       COUNT(ITE.CODPROD) INTO V_VALIDA,
                               V_VALIDA1
FROM TGFITE ITE
INNER JOIN TGFCAB CAB ON ITE.NUNOTA = CAB.NUNOTA
INNER JOIN TGFICM ICM ON ITE.IDALIQICMS = ICM.IDALIQ
INNER JOIN TGFPRO PRO ON ITE.CODPROD = PRO.CODPROD
INNER JOIN TGFPAR PAR ON CAB.CODPARC = PAR.CODPARC
INNER JOIN TSICID CID ON PAR.CODCID = CID.CODCID
WHERE ITE.VLRSUBST >0
  AND CAB.TIPMOV = 'V'
  AND CID.UF = 2
  AND PRO.AD_PMPF IS NULL
  AND CAB.DTENTSAI >= V_DATAINI
  AND CAB.DTENTSAI <= V_DATAFIN;

IF V_VALIDA1 >= 1 THEN raise_application_error(-20101, fc_formatahtml(P_MENSAGEM => 'Cálculo Não realizado', P_MOTIVO => 'Verificar os Produtos citados abaixo', P_SOLUCAO => V_VALIDA));

END IF;


FOR LINHA_PMPF IN
  (SELECT NUNOTA,
          NUMNOTA,
          CODPARC,
          round(SUM(VLRICMS), 2) AS VLRICMS,
          round(sum(VLRIPI), 2) AS VLRIPI,
          round(SUM(VLRTOT), 2) AS VLRTOT,
          round(SUM(VLRSUBST), 2) AS VLRSUBST,
          round(SUM(VLRPMPF), 2) AS VLRPMPF,
          round(SUM(STVALORPAUTA), 2) AS STVALORPAUTA,
          NVL(
                (SELECT sum(F.VALORDEPOSITO)
                 FROM AD_APURACAOPMPF F
                 WHERE F.NUNOTA = AD_APURACAOPMPF.NUNOTA
                   AND VALORDEPOSITO >0),0) AS VALORDEPOSITO,
          DTENTSAI,
          VLRNOTA
   FROM AD_APURACAOPMPF
   WHERE DTENTSAI >= V_DATAINI
     AND DTENTSAI <= V_DATAFIN
     AND CODEMP = V_CODEMPRESA
   GROUP BY NUNOTA,
            NUMNOTA,
            CODPARC,
            NOMEPARC,
            DTENTSAI,
            VLRNOTA) LOOP
INSERT INTO AD_NOTASPMPF (NUMAPU, NUNOTA, NUMNOTA, VLRICMS, VLRIPI, VLRSUBST, VLRPMPF, STVALORPAUTA, VALORDEPOSITO, DTENTSAI, CODPARC, VLRTOT, VLRNOTA)
VALUES (FIELD_NUMAPU, LINHA_PMPF.NUNOTA, LINHA_PMPF.NUMNOTA, LINHA_PMPF.VLRICMS, LINHA_PMPF.VLRIPI, LINHA_PMPF.VLRSUBST, LINHA_PMPF.VLRPMPF, LINHA_PMPF.STVALORPAUTA, LINHA_PMPF.VALORDEPOSITO,LINHA_PMPF.DTENTSAI, LINHA_PMPF.CODPARC, LINHA_PMPF.VLRTOT,LINHA_PMPF.VLRNOTA);


COMMIT;

END LOOP;


FOR LINHA_ITE IN
  (SELECT NUNOTA,
          NUMNOTA,
          CODPARC,
          round(VLRICMS, 2) AS VLRICMS,
          round(VLRIPI, 2) AS VLRIPI,
          round(VLRTOT, 2) AS VLRTOT,
          round(VLRSUBST, 2) AS VLRSUBST,
          round(VLRPMPF, 2) AS VLRPMPF,
          round(STVALORPAUTA, 2) AS STVALORPAUTA,
          CASE
              WHEN round(VALORDEPOSITO, 2) >0 THEN round(VALORDEPOSITO, 2)
              WHEN round(VALORDEPOSITO, 2) <0 THEN 0
          END VALORDEPOSITO,
          DTENTSAI,
          CODPROD,
          SEQUENCIA,
          QTDNEG
   FROM AD_APURACAOPMPF
   WHERE DTENTSAI >= V_DATAINI
     AND DTENTSAI <= V_DATAFIN
     AND CODEMP = V_CODEMPRESA) LOOP
INSERT INTO AD_ITEPMPF (NUMAPU, NUNOTA, NUMNOTA, VLRICMS, VLRIPI, VLRSUBST, VLRPMPF, STVALORPAUTA, VALORDEPOSITO, DTENTSAI, CODPARC, VLRTOT, CODPROD, SEQUENCIA, QTDNEG)
VALUES (FIELD_NUMAPU, LINHA_ITE.NUNOTA, LINHA_ITE.NUMNOTA, LINHA_ITE.VLRICMS, LINHA_ITE.VLRIPI, LINHA_ITE.VLRSUBST, LINHA_ITE.VLRPMPF, LINHA_ITE.STVALORPAUTA, LINHA_ITE.VALORDEPOSITO,LINHA_ITE.DTENTSAI, LINHA_ITE.CODPARC, LINHA_ITE.VLRTOT,LINHA_ITE.CODPROD,LINHA_ITE.SEQUENCIA,LINHA_ITE.QTDNEG);


COMMIT;

END LOOP;


SELECT sum(VALORDEPOSITO) INTO V_TOTAL
FROM AD_APURACAOPMPF
WHERE DTENTSAI >= V_DATAINI
  AND DTENTSAI <= V_DATAFIN
  AND VALORDEPOSITO >0
  AND CODEMP = V_CODEMPRESA;


UPDATE AD_CABECALHOPMPF
SET CALCULADO = 'S',
    CODUSU = STP_GET_CODUSULOGADO,
    DTCALCULO = SYSDATE,
    VLRTOT = V_TOTAL
WHERE NUMAPU = FIELD_NUMAPU;

IF V_TOTAL >0
OR V_TOTAL < 0 THEN P_MENSAGEM := 'Cálculo realizado com sucesso, valor Total a recolher: R$ '|| V_TOTAL||' Período considerado: '|| V_DATAINI|| ' a '||V_DATAFIN;

ELSE P_MENSAGEM := 'Sem Movimento no período: '|| V_DATAINI|| ' a '||V_DATAFIN;

END IF;


SELECT MAX(NUFIN)+1 INTO V_NUFIN
FROM
  (SELECT NUFIN
   FROM TGFFIN);


SELECT MAX(DHALTER) DHALTER INTO v_dhalter
FROM TGFTOP
WHERE CODTIPOPER = 4101
GROUP BY CODTIPOPER;

IF V_TOTAL >0 THEN
INSERT INTO TGFFIN (NUFIN, CODEMP, NUMNOTA, DTNEG, DHMOV, DTVENCINIC, DTVENC, CODPARC, CODTIPOPER, DHTIPOPER, CODBCO, CODNAT, CODCENCUS, CODMOEDA, CODTIPTIT, VLRDESDOB, VLRJURO, AUTORIZADO, RECDESP, PROVISAO, ORIGEM, TIPMARCCHEQ, CODPROJ, DTALTER, AD_CODRECDARF, HISTORICO)
VALUES (V_NUFIN,V_CODEMPRESA, 0, V_DATAINI, SYSDATE,/*VENCIMENTOINICI*/PARAM_DTVENC,/*VENCIMENTO*/PARAM_DTVENC,1954,4101,v_dhalter,237,'1020103','10903','0',17,V_TOTAL,0,'N','-1','N','F','I','0',SYSDATE,0,'REF. PAGTO GUIA DEPOSITO JUDICIAL DA REFERÊNCIA: '||V_DATAINI||' - PROCESSO MINAS GERAIS Nº 50682620720208130024');


UPDATE AD_CABECALHOPMPF
SET NUFIN = V_NUFIN
WHERE NUMAPU = FIELD_NUMAPU;

END IF;

END LOOP;

-- <ESCREVA SEU CÓDIGO DE FINALIZAÇÃO AQUI> --
 END;
